"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _uuid = require("uuid");

var _uuid2 = _interopRequireDefault(_uuid);

var _Node = require("./Node");

var _Node2 = _interopRequireDefault(_Node);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Tree = function Tree(_ref) {
  var checkboxes = _ref.checkboxes,
      items = _ref.items,
      comparator = _ref.comparator,
      nodeProps = _objectWithoutPropertiesLoose(_ref, ["checkboxes", "items", "comparator"]);

  var _React$useState = _react2.default.useState([]),
      collapsedItems = _React$useState[0],
      setCollapsedItems = _React$useState[1];

  var listToRender = checkboxes ? items[nodeProps.nodesKey] : items;

  var toggleCollapsed = _react2.default.useCallback(function (item) {
    isCollapsed(item) ? setCollapsedItems(collapsedItems.filter(function (collapsedItem) {
      return !comparator(collapsedItem)(item);
    })) : setCollapsedItems([].concat(collapsedItems, [item]));
  }, [collapsedItems]);

  var isCollapsed = function isCollapsed(item) {
    return collapsedItems.some(comparator(item));
  };

  return _react2.default.createElement(_react2.default.Fragment, null, listToRender.map(function (data) {
    return _react2.default.createElement(_Node2.default, _extends({
      isCollapsed: isCollapsed,
      toggleCollapsed: toggleCollapsed,
      checkboxes: checkboxes
    }, nodeProps, {
      key: "row-" + (0, _uuid2.default)(),
      data: data
    }));
  }));
};

exports.default = _react2.default.memo(Tree);