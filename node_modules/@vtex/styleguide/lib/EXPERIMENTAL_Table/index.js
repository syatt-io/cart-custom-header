"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tablePropTypes = exports.measuresPropTypes = undefined;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _index = require("./Toolbar/index");

var _index2 = _interopRequireDefault(_index);

var _constants = require("./constants");

var _Pagination = require("./Pagination");

var _Pagination2 = _interopRequireDefault(_Pagination);

var _DataTable = require("./DataTable");

var _DataTable2 = _interopRequireDefault(_DataTable);

var _BulkActions = require("./BulkActions");

var _BulkActions2 = _interopRequireDefault(_BulkActions);

var _FilterBar = require("./FilterBar");

var _FilterBar2 = _interopRequireDefault(_FilterBar);

var _Headings = require("./DataTable/Headings");

var _Headings2 = _interopRequireDefault(_Headings);

var _Rows = require("./DataTable/Rows");

var _Rows2 = _interopRequireDefault(_Rows);

var _useTableMeasures = require("./hooks/useTableMeasures");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Table = function Table(_ref) {
  var children = _ref.children,
      measures = _ref.measures,
      isRowActive = _ref.isRowActive,
      loading = _ref.loading,
      emptyState = _ref.emptyState,
      empty = _ref.empty,
      checkboxes = _ref.checkboxes,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "measures", "isRowActive", "loading", "emptyState", "empty", "checkboxes"]);

  if (!measures) {
    throw new Error('Provide measures to the Table');
  }

  var tableHeight = measures.tableHeight,
      rowHeight = measures.rowHeight,
      selectedDensity = measures.selectedDensity;
  var columns = props.columns,
      onRowClick = props.onRowClick,
      items = props.items;
  return _react2.default.createElement("div", {
    style: {
      minHeight: tableHeight
    },
    id: _constants.NAMESPACES.CONTAINER,
    className: "flex flex-column"
  }, children, _react2.default.createElement(_DataTable2.default, {
    empty: empty,
    loading: loading,
    emptyState: emptyState,
    height: tableHeight
  }, _react2.default.createElement("thead", {
    id: _constants.NAMESPACES.HEADER,
    className: "w-100 ph4 truncate overflow-x-hidden c-muted-2 f6"
  }, _react2.default.createElement(_Headings2.default, {
    columns: columns,
    checkboxes: checkboxes
  })), !empty && !loading && _react2.default.createElement("tbody", null, _react2.default.createElement(_Rows2.default, {
    checkboxes: checkboxes,
    selectedDensity: selectedDensity,
    columns: columns,
    items: items,
    rowHeight: rowHeight,
    onRowClick: onRowClick,
    isRowActive: isRowActive
  }))));
};

var measuresPropTypes = exports.measuresPropTypes = {
  tableHeight: _propTypes2.default.number,
  rowHeight: _propTypes2.default.number,
  selectedDensity: _propTypes2.default.oneOf(_useTableMeasures.DENSITY_OPTIONS),
  setSelectedDensity: _propTypes2.default.func
};
var tablePropTypes = exports.tablePropTypes = {
  measures: _propTypes2.default.shape(measuresPropTypes),
  containerHeight: _propTypes2.default.number,
  empty: _propTypes2.default.bool,
  columns: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    id: _propTypes2.default.string,
    title: _propTypes2.default.string,
    width: _propTypes2.default.number,
    cellRender: _propTypes2.default.func,
    headerRender: _propTypes2.default.func
  })),
  items: _propTypes2.default.arrayOf(_propTypes2.default.object),
  loading: _propTypes2.default.oneOfType([_propTypes2.default.shape({
    renderAs: _propTypes2.default.func
  }), _propTypes2.default.bool]),
  itemsSizeEstimate: _propTypes2.default.number,
  onRowClick: _propTypes2.default.func,
  isRowActive: _propTypes2.default.func,
  emptyState: _propTypes2.default.shape({
    label: _propTypes2.default.string,
    children: _propTypes2.default.element
  })
};
Table.Toolbar = _index2.default;
Table.FilterBar = _FilterBar2.default;
Table.Pagination = _Pagination2.default;
Table.propTypes = tablePropTypes;
Table.Bulk = _BulkActions2.default;
exports.default = Table;