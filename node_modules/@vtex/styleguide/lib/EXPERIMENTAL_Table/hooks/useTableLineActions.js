"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useTableLineActions;

var _LineActions = require("../LineActions");

var _LineActions2 = _interopRequireDefault(_LineActions);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var NO_TITLE_COLUMN = ' ';
var LINE_ACTION_ID = 'lineAction';

function useTableLineActions(_ref) {
  var items = _ref.items,
      columns = _ref.columns,
      lineActions = _ref.lineActions;
  var itemsWithLineActions = (0, _react.useMemo)(function () {
    return lineActions ? items.map(function (item) {
      return _extends({
        lineAction: true
      }, item);
    }) : items;
  }, [items]);
  var columnsWithLineActions = (0, _react.useMemo)(function () {
    var cellRender = function cellRender(_ref2) {
      var rowData = _ref2.rowData;
      return _react2.default.createElement(_LineActions2.default, {
        lineActions: lineActions,
        rowData: rowData
      });
    };

    return lineActions ? [].concat(columns, [{
      id: LINE_ACTION_ID,
      title: NO_TITLE_COLUMN,
      cellRender: cellRender
    }]) : columns;
  }, [columns]);
  return {
    itemsWithLineActions: itemsWithLineActions,
    columnsWithLineActions: columnsWithLineActions
  };
}