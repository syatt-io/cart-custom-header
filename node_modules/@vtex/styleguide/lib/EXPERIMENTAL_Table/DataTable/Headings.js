"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _uuid = require("uuid");

var _uuid2 = _interopRequireDefault(_uuid);

var _useTableMeasures = require("../hooks/useTableMeasures");

var _Row = require("./Row");

var _Row2 = _interopRequireDefault(_Row);

var _CellPrefix = require("./CellPrefix");

var _CellPrefix2 = _interopRequireDefault(_CellPrefix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Headings = function Headings(_ref) {
  var columns = _ref.columns,
      checkboxes = _ref.checkboxes,
      cellProps = _ref.cellProps,
      rowProps = _ref.rowProps;
  return _react2.default.createElement(_Row2.default, _extends({}, rowProps, {
    height: _useTableMeasures.TABLE_HEADER_HEIGHT
  }), columns.map(function (columnData, headerIndex) {
    var headerRenderer = columnData.headerRenderer,
        title = columnData.title,
        width = columnData.width;
    var content = headerRenderer ? headerRenderer({
      columnData: columnData
    }) : title;
    return _react2.default.createElement(_Row2.default.Cell, _extends({}, cellProps, {
      className: "bt normal",
      key: "heading-" + (0, _uuid2.default)(),
      width: width
    }), checkboxes && headerIndex === 0 && _react2.default.createElement(_CellPrefix2.default, null, _react2.default.createElement("span", {
      className: "ph3"
    }, _react2.default.createElement(_CellPrefix2.default.Checkbox, {
      checked: checkboxes.isChecked(checkboxes.itemTree),
      partial: checkboxes.isPartiallyChecked(checkboxes.itemTree),
      onClick: function onClick() {
        return checkboxes.toggle(checkboxes.itemTree);
      }
    }))), content);
  }));
};

Headings.defaultProps = {
  cellProps: {
    as: 'th'
  }
};
exports.default = _react2.default.memo(Headings);