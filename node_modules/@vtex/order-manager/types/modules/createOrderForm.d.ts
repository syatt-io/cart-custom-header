import type { FC } from 'react';
import type { OrderForm, OrderFormUpdate } from '../typings';
import type { createUseMessages } from './createUseMessages';
import type { UseLogger } from './logger';
interface GetOrderFormHookArgs<O extends OrderForm> {
    orderForm: O;
    setOrderForm: (update: OrderFormUpdate<O>) => void;
}
export interface CreateOrderFormProviderParams<O extends OrderForm> {
    useOrderFormMessages: ReturnType<typeof createUseMessages>;
    useGetOrderForm: (args: GetOrderFormHookArgs<O>) => {
        data?: {
            orderForm: O;
        };
        loading: boolean;
        error?: any;
    };
    defaultOrderForm: O;
    useLogger?: UseLogger;
}
export declare function createOrderFormProvider<O extends OrderForm>({ useOrderFormMessages, useGetOrderForm, useLogger, defaultOrderForm, }: CreateOrderFormProviderParams<O>): {
    OrderFormProvider: FC<{}>;
};
export {};
//# sourceMappingURL=createOrderForm.d.ts.map