import { createUseMessages } from './modules/createUseMessages'
import type { CreateUseMessagesParams } from './modules/createUseMessages'
import type { CreateOrderFormProviderParams } from './modules/createOrderForm'
import { createOrderFormProvider as createOrderForm } from './modules/createOrderForm'
import type { OrderForm } from './typings'

interface OrderFormProviderSettings<T extends OrderForm>
  extends CreateUseMessagesParams,
    Pick<
      CreateOrderFormProviderParams<T>,
      Exclude<keyof CreateOrderFormProviderParams<T>, 'useOrderFormMessages'>
    > {}

export function createOrderFormProvider<T extends OrderForm>({
  useToast,
  useClearOrderFormMessages,
  useGetOrderForm,
  useLogger,
  defaultOrderForm,
}: OrderFormProviderSettings<T>) {
  const useOrderFormMessages = createUseMessages({
    useToast,
    useClearOrderFormMessages,
  })

  return createOrderForm<T>({
    useOrderFormMessages,
    useGetOrderForm,
    useLogger,
    defaultOrderForm,
  })
}

export default { createOrderFormProvider }
