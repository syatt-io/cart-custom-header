{"version":3,"file":"eslint-plugin-admin-ui.cjs.development.js","sources":["../src/configs/recommended.ts","../src/utils/logic/isPresent.ts","../src/utils/estree/isImportSpecifierNode.ts","../src/utils/react/isComponentName.ts","../src/utils/estree/getFunctionNodeName.ts","../src/utils/estree/isFunctionNode.ts","../src/rules/create-tag-component-outside-render-phase.ts","../src/index.ts"],"sourcesContent":["import type { Linter } from 'eslint'\n\nexport const recommended: Linter.BaseConfig = {\n  plugins: ['@vtex/admin-ui'],\n  rules: {\n    '@vtex/admin-ui/create-tag-component-outside-render-phase': 'error',\n  },\n}\n","export const isPresent = <T>(value: T): value is Exclude<T, null> =>\n  value !== null\n","import type * as ESTree from 'estree'\n\ntype ImportNode =\n  | ESTree.ImportSpecifier\n  | ESTree.ImportDefaultSpecifier\n  | ESTree.ImportNamespaceSpecifier\n\nexport const isImportSpecifierNode = (\n  node: ImportNode\n): node is ESTree.ImportSpecifier => {\n  return node.type === 'ImportSpecifier'\n}\n","export const isComponentName = (name: string) =>\n  name[0] === name[0].toUpperCase()\n","import type { Rule } from 'eslint'\nimport type { Node } from 'estree'\n\nexport const getFunctionNodeName = (node: Node) => {\n  if (node.type === 'FunctionDeclaration') {\n    return node.id?.name ?? ''\n  }\n\n  const { parent } = node as Rule.Node\n\n  if (parent.type === 'VariableDeclarator' && parent.id.type === 'Identifier') {\n    return parent.id.name\n  }\n\n  return ''\n}\n","import type * as ESTree from 'estree'\n\nexport const isFunctionNode = (node: ESTree.Node): node is ESTree.Function => {\n  return (\n    node.type === 'ArrowFunctionExpression' ||\n    node.type === 'FunctionExpression' ||\n    node.type === 'FunctionDeclaration'\n  )\n}\n","import type { Rule } from 'eslint'\nimport type * as ESTree from 'estree'\n\nimport { isPresent } from '../utils/logic/isPresent'\nimport { isImportSpecifierNode } from '../utils/estree/isImportSpecifierNode'\nimport { isComponentName } from '../utils/react/isComponentName'\nimport { getFunctionNodeName } from '../utils/estree/getFunctionNodeName'\nimport { isFunctionNode } from '../utils/estree/isFunctionNode'\n\nexport const createTagComponentOutsideRenderPhase: Rule.RuleModule = {\n  meta: {\n    docs: {\n      description:\n        'Avoid create custom components inside render phase of some component',\n      category: 'Best Practices',\n    },\n    schema: [],\n  },\n\n  create(context) {\n    const { scopeManager } = context.getSourceCode()\n\n    let tagImportNode: ESTree.ImportSpecifier | undefined\n\n    return {\n      ImportDeclaration(node) {\n        if (node.source.value === '@vtex/admin-ui') {\n          tagImportNode = node.specifiers\n            .filter(isImportSpecifierNode)\n            .find((specifier) => {\n              return specifier.imported.name === 'tag'\n            })\n        }\n      },\n\n      ':function CallExpression': function (\n        node: ESTree.CallExpression & Rule.Node\n      ) {\n        if (!tagImportNode) return\n\n        const ancestors = context.getAncestors()\n\n        const functionNode = ancestors.reverse().find(isFunctionNode)!\n        const functionName = getFunctionNodeName(functionNode)\n\n        if (!isComponentName(functionName)) return\n\n        const scopes = ancestors\n          .map((node) => scopeManager.acquire(node))\n          .filter(isPresent)\n\n        const hasShadowingTagDeclaration = scopes.some((scope) =>\n          scope.set.get(tagImportNode!.local.name)\n        )\n\n        if (hasShadowingTagDeclaration) return\n\n        if (\n          node.callee.type === 'Identifier' &&\n          node.callee.name === tagImportNode.local.name\n        ) {\n          context.report({\n            node,\n            message:\n              'Do not create custom components inside render phase of some component',\n          })\n        }\n      },\n    }\n  },\n}\n","import { recommended } from './configs/recommended'\nimport { createTagComponentOutsideRenderPhase } from './rules/create-tag-component-outside-render-phase'\n\n// tsdx doesn't support we configure our tsconfig.json\n// to target module commonjs, so we need to manually\n// use module.exports here\nmodule.exports = {\n  configs: {\n    recommended,\n  },\n\n  // TODO: these rules could be auto-generated using fs+path,\n  // but tsdx doesn't works well with dynamic imports,\n  // so we need to change our build system first\n  rules: {\n    'create-tag-component-outside-render-phase':\n      createTagComponentOutsideRenderPhase,\n  },\n}\n"],"names":["recommended","plugins","rules","isPresent","value","isImportSpecifierNode","node","type","isComponentName","name","toUpperCase","getFunctionNodeName","id","parent","isFunctionNode","createTagComponentOutsideRenderPhase","meta","docs","description","category","schema","create","context","getSourceCode","scopeManager","tagImportNode","ImportDeclaration","source","specifiers","filter","find","specifier","imported","ancestors","getAncestors","functionNode","reverse","functionName","scopes","map","acquire","hasShadowingTagDeclaration","some","scope","set","get","local","callee","report","message","module","exports","configs"],"mappings":"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"}